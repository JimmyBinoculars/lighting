/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * OSCPluginDescription.h
 * Contains the description for the osc plugin.
 * Copyright (C) 2016 Florian Edelmann
 *
 * This file has been autogenerated by convert_README_to_header.sh, DO NOT EDIT.
 */
#ifndef PLUGINS_OSC_OSCPLUGINDESCRIPTION_H_
#define PLUGINS_OSC_OSCPLUGINDESCRIPTION_H_

namespace ola {
namespace plugin {
namespace osc {

const char plugin_description[] = "OSC (Open Sound Control) Plugin\n"
"===============================\n"
"\n"
"This plugin allows OLA to send and receive\n"
"[OSC](http://www.opensoundcontrol.org/) messages.\n"
"\n"
"OLA uses the blob type for transporting DMX data.\n"
"\n"
"\n"
"## Config file: `ola-osc.conf`\n"
"\n"
"`input_ports = <int>`  \n"
"The number of input ports to create.\n"
"\n"
"`output_ports = <int>`  \n"
"The number of output ports to create.\n"
"\n"
"`udp_listen_port = <int>`\n"
"The UDP Port to listen on for OSC messages.\n"
"\n"
"`port_N_address = /address`  \n"
"The OSC address to listen on for port N. If the address contains `%d` it's\n"
"replaced by the universe number for port N.\n"
"\n"
"`port_N_targets = ip:port/address,ip:port/address,...`\n"
"For output port N, the list of targets to send OSC messages to. If the\n"
"targets contain `%d` it's replaced by the universe number for port N\n"
"\n"
"`port_N_output_format = <osc type>`\n"
"The format (OSC Type) to send the DMX data in:\n"
"\n"
"- `blob`: a OSC-blob\n"
"- `float_array`: an array of float values. 0.0 - 1.0\n"
"- `individual_float`: one float message for each slot (channel). 0.0 - 1.0\n"
"- `individual_int`: one int message for each slot (channel). 0 - 255.\n"
"- `int_array`: an array of int values. 0 - 255.";

}  // namespace osc
}  // namespace plugin
}  // namespace ola

#endif  // PLUGINS_OSC_OSCPLUGINDESCRIPTION_H_
