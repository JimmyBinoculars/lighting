/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Library General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * SPIDMXPluginDescription.h
 * Contains the description for the spidmx plugin.
 * Copyright (C) 2016 Florian Edelmann
 *
 * This file has been autogenerated by convert_README_to_header.sh, DO NOT EDIT.
 */
#ifndef PLUGINS_SPIDMX_SPIDMXPLUGINDESCRIPTION_H_
#define PLUGINS_SPIDMX_SPIDMXPLUGINDESCRIPTION_H_

namespace ola {
namespace plugin {
namespace spidmx {

const char plugin_description[] = "Native SPI DMX Plugin\n"
"=====================\n"
"\n"
"This plugin samples the Serial Peripheral Interface (SPI) at 2MHz to\n"
"receive DMX data. You need to connect only the *MISO* pin to the *receive*\n"
"pin of a transceiver chip like the *MAX485* or *SN75176*.\n"
"\n"
"Repeatedly, blocks of 4096 bytes are read as a batch operation and parsed\n"
"afterwards. We must hope that a DMX packet is contained in a block as a\n"
"whole. Since often a packet will be cut off by the block end, the higher\n"
"channels are updated less frequently than the lower ones. However, you can\n"
"set a larger block size if you want a higher refresh rate for the high\n"
"channels (which results in more stuttering in all channels, as the time\n"
"between two SPI read operation increases).\n"
"\n"
"A detailed description of the development process and the techniques used\n"
"can be found in Flo Edelmann's Bachelors Thesis:\n"
"http://mnm-team.org/pub/Fopras/edel17/PDF-Version/edel17.pdf\n"
"\n"
"\n"
"## Raspberry Pi configuration\n"
"\n"
"On the Raspberry Pi, you need to enable SPI and increase `spidev`'s\n"
"read / transmit buffer size:\n"
"\n"
"* Run `sudo raspi-config` and enable SPI.\n"
"* Add `spidev.bufsiz=65536` to `/etc/cmdline.txt` (in the same line). This\n"
"  is the maximum value. The value specified must be at least the block\n"
"  length set below. The default `spidev.bufsiz` is 4096.\n"
"* Reboot.\n"
"* Check `cat /sys/module/spidev/parameters/bufsiz` that it now returns the\n"
"  new value.\n"
"\n"
"Only SPI device `/dev/spidev0.0` is available via the GPIO pins.\n"
"\n"
"\n"
"## Config file: `ola-spidmx.conf`\n"
"\n"
"`enabled = true`  \n"
"Enable this plugin (DISABLED by default).\n"
"\n"
"`device_prefix = <string>`  \n"
"The prefix of files to match in `/dev`. Usually set to `spidev`. Each match\n"
"will instantiate a device. Multiple values are supported by repeating this\n"
"line.\n"
"\n"
"### Per Device Settings\n"
"\n"
"**Note:** Substitute `<device>` with the full device name, e.g.\n"
"`/dev/spidev0.0`.\n"
"\n"
"`<device>-blocklength = 4096`  \n"
"How many SPI bytes (= DMX bits) should be received (optional). The default\n"
"is 4096, but 8192 is recommended. You may need to make further\n"
"configurations on the Raspberry Pi (see above).";

}  // namespace spidmx
}  // namespace plugin
}  // namespace ola

#endif  // PLUGINS_SPIDMX_SPIDMXPLUGINDESCRIPTION_H_
